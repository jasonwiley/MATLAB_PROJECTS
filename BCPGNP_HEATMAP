%@version 1.2 overlay heatmap of polymer beads grafted to nanoparticle
clear all
close all
tic;
number_of_grafts=100;
number_of_graft_sites = 104;
number_of_nanoparticles=110;
number_of_c = 9;
number_of_d = 9;
low_angle = 0;
hi_angle = 45;
load(sprintf('N18N9NG%d_ROTATED_FULL_C_SYSTEM.mat',number_of_grafts));
load(sprintf('N18NA9NG%d_CHAINSTATS_NO_D.mat',number_of_grafts));
evalin('base', 'chainstatsystem = ans;');
evalin('base', 'clear ans;');
columns_with_zeros = any(chainstatsystem.chains2 == 0, 1);
chainstatsystem.chains2(:,columns_with_zeros) = [];
graft_site_index = chainstatsystem.chains2(1,:)';
b_c_indices = zeros(size(chainstatsystem.chains2,1),size(system1.middle_c_index,1));
for i = 1:size(system1.middle_c_index,1)
    for j = 1:size(chainstatsystem.chains2,2)
        if system1.middle_c_index(i) == chainstatsystem.chains2(2,j)
            b_c_indices(:,i) = chainstatsystem.chains2(1:10,j);
        else
        end
    end
end
columns_with_zeros = any(b_c_indices == 0, 1);
b_c_indices(:,columns_with_zeros) = [];
b_adjusted_dimension = system1.middle_b_index(1:number_of_graft_sites:end);
last_b_index = find(system1.middle_b_index(:) == b_adjusted_dimension(end))-1;
mod_b_index = system1.middle_b_index(1:last_b_index,:);
reshape_b_index = reshape(mod_b_index,number_of_graft_sites,(last_b_index/number_of_graft_sites));
b_bead_index = system1.all_pos(system1.middle_b_index);
c_bead_index = reshape(chainstatsystem.chains2,number_of_c+1,number_of_grafts,number_of_nanoparticles);
c_bead_pos_per_nanoparticle = zeros(number_of_c*number_of_grafts,3,number_of_nanoparticles);
for i = 1:size(c_bead_index,3)
    m=1;
     for j = 1:size(c_bead_index,2)
           for k = 1:size(c_bead_index,1)
               c_bead_pos_per_nanoparticle(m,1:3,i) = system1.all_pos(c_bead_index(k,j,i),:);
               m=m+1;
           end
    end
end
b_beads_per_nanoparticle = system1.all_pos(system1.middle_b_index,:);
b_bead_pos_per_nanoparticle = zeros(size(c_bead_index,1)*size(c_bead_index,2),3,size(c_bead_index,3))
for i = 1:size(c_bead_index,3)
    m=1;
     for j = 1:size(c_bead_index,2)
           for k = 1:size(c_bead_index,1)
               b_bead_pos_per_nanoparticle(m,1:3,i) = system1.all_pos(c_bead_index(k,j,i),:);
               m=m+1;
           end
    end
end
a_beads_per_nanoporticle = system1.all_pos(system1.middle_a_index,:);
scatter3(a_beads_per_nanoporticle(:,1),a_beads_per_nanoporticle(:,2),a_beads_per_nanoporticle(:,3))
xlabel('x')
ylabel('y')
zlabel('z')
xlim([-20 20])
ylim([-20 20])
zlim([-20 20])
a_bead_index = find(system1.all_attype == 'A');
index = zeros(1,size(system1.middle_a_index,1));
for i = 1:size(a_bead_index,1)
    for j = 1:size(system1.middle_a_index,1)
        if a_bead_index(i) == system1.middle_a_index(j)
            index(j) = i;
        else
        end
    end
end
selected_c_in_middle_lamellae = zeros(size(c_bead_pos_per_nanoparticle,1),size(c_bead_pos_per_nanoparticle,2),size(index,2))
for i = 1:size(index,2)
    selected_c_in_middle_lamellae(:,:,i) = c_bead_pos_per_nanoparticle(:,:,index(i));
end
a_bead_middle_lamellae_positions = zeros(size(system1.middle_a_index,1),3);
for i = 1:size(system1.middle_a_index,1)
    a_bead_middle_lamellae_positions(i,1:3) = system1.all_pos(system1.middle_a_index(i),:); 
end
centered_a_positions = zeros(size(system1.middle_a_index,1),3);
centered_c_positions = zeros(size(selected_c_in_middle_lamellae,1),3,size(system1.middle_a_index,1));
raw_c_positions = zeros(size(selected_c_in_middle_lamellae,1),3,size(system1.middle_a_index,1));
c_bead_adjustment = zeros(size(selected_c_in_middle_lamellae,1),3,size(system1.middle_a_index,1));
for i = 1:size(system1.middle_a_index,1)
    centered_a_positions(i,:) = a_bead_middle_lamellae_positions(i,:) - a_bead_middle_lamellae_positions(i,:);
    for j = 1:size(selected_c_in_middle_lamellae,1)
        centered_c_positions(j,:,i) = selected_c_in_middle_lamellae(j,:,i) - a_bead_middle_lamellae_positions(i,:);
        raw_c_positions(j,:,i) = selected_c_in_middle_lamellae(j,:,i);
        c_bead_adjustment(j,:,i) = -a_bead_middle_lamellae_positions(i,:);
    end
end
b_bead_index = c_bead_index(1,:,:);
b_bead_positions = zeros(size(b_bead_index,2),3,size(index,2));
for i = 1:size(index,2)
    for j = 1:size(b_bead_index,2)
        b_bead_positions(j,1:3,i) = system1.all_pos(b_bead_index(1,j,index(i)),:);
    end
end
centered_b_positions = zeros(size(b_bead_positions,1),3,size(b_bead_positions,3));
raw_b_positions = zeros(size(b_bead_positions,1),3,size(b_bead_positions,3));
b_bead_adjustment =zeros(size(b_bead_positions,1),3,size(b_bead_positions,3));
for i = 1:size(b_bead_positions,1)%100
    for j = 1:size(b_bead_positions,3)%55
        centered_b_positions (i,:,j)= b_bead_positions(i,:,j) - a_bead_middle_lamellae_positions(j,:);
        raw_b_positions(i,:,j) = b_bead_positions(i,:,j);
        b_bead_adjustment(i,:,j) = -a_bead_middle_lamellae_positions(j,:);
    end
end
centered_graft_angles = zeros(size(centered_b_positions,1),size(centered_b_positions,3));
raw_graft_angles = zeros(size(centered_b_positions,1),size(centered_b_positions,3));
for i = 1:size(centered_b_positions,3)
    for j = 1:size(centered_b_positions,1)
        centered_graft_angles(j,i) = atan2(centered_b_positions(j, 3, i), centered_b_positions(j, 2, i));
        raw_graft_angles(j,i) = atan2((b_bead_positions(j, 3, i) - a_bead_middle_lamellae_positions(i,3)), (b_bead_positions(j, 2, i) - a_bead_middle_lamellae_positions(i,2)));
    end
end
centered_graft_angles = rad2deg(centered_graft_angles);
raw_graft_angles = rad2deg(raw_graft_angles);
centered_combined_angle_pos = zeros(size(centered_graft_angles,1),4,size(centered_graft_angles,2));
raw_combined_angle_pos = zeros(size(centered_graft_angles,1),4,size(centered_graft_angles,2));
for i = 1:size(centered_graft_angles,2)
    for j = 1:size(centered_graft_angles,1)
        centered_combined_angle_pos(j,:,i) = [centered_graft_angles(j,i) centered_b_positions(j,:,i)];
        raw_combined_angle_pos(j,:,i) = [raw_graft_angles(j,i) raw_b_positions(j,:,i)];
    end
end
k = 1;
for i = 1:size(centered_combined_angle_pos,3)
    for j = 1:size(centered_combined_angle_pos,1)
        if centered_combined_angle_pos(j,1,i) < hi_angle & centered_combined_angle_pos(j,1,i) > low_angle
            centered_matrix_for_heatmap(k,1:4) = centered_combined_angle_pos(j,1:4,i);
            centered_b_c_for_heatmap(:,j,i) = c_bead_index(:,j,i);
            k = k + 1;
        elseif centered_combined_angle_pos(j,1,i) > -hi_angle & centered_combined_angle_pos(j,1,i) < -low_angle
            centered_matrix_for_heatmap(k,1:4) = centered_combined_angle_pos(j,1:4,i);
            centered_b_c_for_heatmap(:,j,i) = c_bead_index(:,j,i);
            k = k + 1;
        else
        end
    end
end
% centered_matrix_for_heatmap = [centered_matrix_for_heatmap, centered_b_c_for_heatmap(1,:)'];
columns_with_zeros = any(centered_b_c_for_heatmap == 0, 1);
centered_b_c_for_heatmap(:,columns_with_zeros) = [];
clear k
k = 1;
for i = 1:size(raw_combined_angle_pos,3)
    for j = 1:size(raw_combined_angle_pos,1)
        if raw_combined_angle_pos(j,1,i) < hi_angle & raw_combined_angle_pos(j,1,i) > low_angle
            raw_matrix_for_heatmap(k,1:4) = raw_combined_angle_pos(j,1:4,i);
            k = k + 1;
        elseif raw_combined_angle_pos(j,1,i) > -hi_angle & raw_combined_angle_pos(j,1,i) < -low_angle
            raw_matrix_for_heatmap(k,1:4) = raw_combined_angle_pos(j,1:4,i);
            k = k + 1;
        else
        end
    end
end
final_selected_b_indexes = [];
for i = 1:size(raw_matrix_for_heatmap, 1)
    for j = 1:size(system1.all_pos, 1)
        if all(system1.all_pos(j, 1:3) == raw_matrix_for_heatmap(i, 2:4))
            final_selected_b_indexes(end+1) = j;
        break
        end
    end
end
selected_c_bead_index = [];
for i = 1:size(chainstatsystem.chains2,2)
    for k = 1:size(final_selected_b_indexes,2)
        if chainstatsystem.chains2(1,i) == final_selected_b_indexes(1,k)
            for j = 1:number_of_c
            selected_c_bead_index(j,i) = chainstatsystem.chains2(j+1,i);
            end
        else
        end
    end
end
columns_with_zeros = any(selected_c_bead_index == 0, 1);
selected_c_bead_index(:,columns_with_zeros) = [];
for i = 1:size(selected_c_bead_index,2)
    for j = 1:size(selected_c_bead_index,1)
        selected_c_positions(j,1:3,i) = system1.all_pos(selected_c_bead_index(j,i),1:3);
    end
end
c_bead_pos_lamellae=centered_matrix_for_heatmap(:,2:end);
resolution = 10;
center = 2000;
rounded_c_bead_pos = round(c_bead_pos_lamellae * resolution);
rounded_c_bead_pos = rounded_c_bead_pos + abs(min(min(rounded_c_bead_pos)));
gridsize=round(3150);
grid=zeros(gridsize,gridsize);
temp2grid=zeros(gridsize,gridsize);
temp1grid=zeros(gridsize,gridsize);
for i = 1:size(rounded_c_bead_pos, 1) 
    y_coord = rounded_c_bead_pos(i, 2) + center; 
    z_coord = rounded_c_bead_pos(i, 3) + center; 
    temp1grid(z_coord, y_coord) = temp1grid(z_coord, y_coord) + 1;
end
hplot=sum(temp1grid,3);
hplot = temp1grid;
nonZeroIndices = find(hplot ~= 0);
[rowIndices, colIndices] = ind2sub(size(hplot), nonZeroIndices);
positions = [rowIndices, colIndices];
disp(positions);
figure()
heatmap(hplot,'colormap',hot)
%hot,jet,pink
xlim([min(rowIndices) max(rowIndices)])
ylim([min(colIndices) max(colIndices)])
title(sprintf('N18N9NG%d Middle Lamellae',number_of_grafts))
xlabel('y')
ylabel('z')
toc;
run_time = toc;
disp(['Total Run Time = ' num2str(run_time) ' Seconds'])
